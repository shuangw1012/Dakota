# Demonstrate Dakota script interface to Python analysis (Rosenbrock)
environment
## Activate Dakota's legacy X Windows-based graphics on Unix systems
## Consider newer capabilities in the Dakota GUI
  #graphics
  tabular_data
    tabular_data_file = 'opt.dat'

method
	coliny_pattern_search
	initial_delta = 0.5
	solution_target = 1e-4
	exploratory_moves
	  basic_pattern
	contraction_factor = 0.75
	max_iterations = 1000
	max_function_evaluations = 2000
	variable_tolerance = 1e-4

model
	single

variables
	continuous_design = 2
	  initial_point     0.0      0.0
	  lower_bounds     -2.0     -2.0
	  upper_bounds      2.0      2.0
	  descriptors       'x1'     "x2"


interface,							
	fork							
	  analysis_drivers = 'rosenbrock_bb_di.py'
	parameters_file = 'params.in'
	results_file = 'results.out'
	work_directory directory_tag
	file_tag
	file_save
#	aprepro

responses,				
	num_objective_functions = 1	
	#nonlinear_equality_constraints = 1
	no_gradients	
	no_hessians
